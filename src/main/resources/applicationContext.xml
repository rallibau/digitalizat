<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <context:annotation-config />
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="com.digitalizat" />

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/digitalizat" />
        <property name="username" value="root" />
        <property name="password" value="${database.pwd}" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- property name="packagesToScan" value="data" / -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop -->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.hbm2ddl.import_files">master.sql</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.digitalizat.user.dao.User</value>
                <value>com.digitalizat.organization.dao.Organization</value>
                <value>com.digitalizat.document.dao.Document</value>
                <value>com.digitalizat.branch.dao.Branch</value>
                <value>com.digitalizat.resource.dao.Resource</value>
                <value>com.digitalizat.folder.dao.Folder</value>
            </list>
        </property>
    </bean>
    
    
    <bean id="aclManager" class="com.digitalizat.business.ACLManagerIml"></bean>
    <!--bean id="UserDAOImpl" class="com.digitalizat.user.dao.UserDAOImpl"></bean-->
    <!--bean id="OrganizationDaoIml" class="com.digitalizat.organization.dao.OrganizationDaoIml"></bean-->
    <bean id="branchDAO" class="com.digitalizat.branch.dao.BranchDAOImpl"></bean>
    <bean id="resourceDAO" class="com.digitalizat.resource.dao.ResourceDaoIml"></bean>
    <bean id="tdocManager" class="com.digitalizat.business.TdocManagerImpl"></bean>
    <!-- bean id="DocumentDAOImpl" class="com.digitalizat.document.dao.DocumentDAOImpl"></bean -->
    
    
    
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
        
    <bean id="tilesViewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
    </bean>
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/templates/definitions.xml</value>
            </list>
        </property>
    </bean> 
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:server.properties" />
    </bean>
    <context:property-placeholder location="classpath:server.properties" />
    <bean id="serverProperties" class="com.digitalizat.properties.ServerProperties">
        <property name="rutaGestorDocumental" value="${rutaGestorDocumental}" />
        <property name="codigoInvitado" value="${codigoInvitado}" />
    </bean>
    <!-- global-method-security pre-post-annotations="enabled" />
    <global-method-security secured-annotations="enabled" / -->
</beans>